<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <POU Name="FB_ATM_Machine" Id="{5b7d0fad-4689-0734-192c-cc09349922d8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_ATM_Machine IMPLEMENTS I_Machine
VAR_IN_OUT
	xOnButton		:	BOOL;
	xOffButton		:	BOOL;
	xServiceKey		:	BOOL;
	xCardInserted	:	BOOL;
	xCardEjected	:	BOOL;
	xCancelButton	:	BOOL;
END_VAR
VAR_OUTPUT
	ipState	:	I_State	:=	fbOff;
END_VAR
VAR
	fbOff				:	FB_Off(THIS);
	fbIdle				:	FB_Idle(THIS);
	fbMaintenance		:	FB_Maintenance(THIS);
	fbOutOfService		:	FB_OutOfService(THIS);
	fbSelfTest			:	FB_SelfTest(THIS);
	fbServingCustomer	:	FB_ServingCustomer(THIS);
	
	rtrigOnButton		:	R_TRIG;
	rtrigOffButton		:	R_TRIG;
	rtrigCancelButton	:	R_TRIG;
	rtrigCardInserted	:	R_TRIG;
	rtrigCardEjected	:	R_TRIG;
	
	// Simulation Variables
	Sim_TimerTester		:	TON 	:= (PT := T#3S);
	Sim_TimerTransaction:	TON 	:= (PT := T#3S);	
	Sim_xFaultSystem	: 	BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[rtrigOnButton(CLK:= xOnButton);
rtrigOffButton(CLK:= xOffButton);
rtrigCancelButton(CLK:= xCancelButton);
rtrigCardInserted(CLK:= xCardInserted);
rtrigCardEjected(CLK:= xCardEjected);


IF rtrigOnButton.Q THEN
	ipState.Turn_On();
END_IF

IF rtrigOffButton.Q THEN
	ipState.Turn_Off();
END_IF

IF rtrigCancelButton.Q THEN
	ipState.Cancel();
END_IF

IF rtrigCardInserted.Q THEN
	ipState.Card_Inserted();
END_IF

IF rtrigCardEjected.Q THEN
	ipState.Card_Ejected();
END_IF


IF (ipState.Description = E_StateDescription.Idle OR ipState.Description = E_StateDescription.OutOfService) AND xServiceKey THEN
	ipState.Service();
END_IF

IF ipState.Description = E_StateDescription.Maintenance AND NOT xServiceKey THEN
	ipState.Op();
END_IF



// Simulation Variables - Remove and tie to I/O for moving forward
Sim_TimerTester(IN := ipState.Description = E_StateDescription.SelfTest);
IF Sim_TimerTester.Q AND NOT Sim_xFaultSystem THEN
	ipState.SystemTest_OK();
ELSIF Sim_TimerTester.Q  AND Sim_xFaultSystem THEN
	ipState.Failure();
END_IF

Sim_TimerTransaction(IN := ipState.Description = E_StateDescription.ServingCustomer);
IF Sim_TimerTransaction.Q AND NOT Sim_xFaultSystem THEN
	ipState.Card_Ejected();
ELSIF Sim_TimerTransaction.Q AND Sim_xFaultSystem THEN
	ipState.Failure();
END_IF]]></ST>
    </Implementation>
    <Method Name="FB_Init" Id="{ce773053-8282-0701-3e9b-278f6e290085}">
      <Declaration><![CDATA[METHOD FB_Init : BOOL
VAR_INPUT
	(* if TRUE, the retain variables are initialized (warm start / cold start)*)
	bInitRetains	: BOOL;
	(* if TRUE, the instance afterwards gets moved into the copy code (online change)*)
	bInCopyCode	: BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="IdleState" Id="{a1eb420a-8ed4-0616-0e2d-1b421e89e9f7}">
      <Declaration><![CDATA[PROPERTY IdleState : I_State
]]></Declaration>
      <Get Name="Get" Id="{e83c7939-15df-076e-27b4-f2de4c103c20}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IdleState := This^.fbIdle;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MaintenanceState" Id="{0d2eccca-8fde-0c97-338b-7bf862c57529}">
      <Declaration><![CDATA[PROPERTY MaintenanceState : I_State
]]></Declaration>
      <Get Name="Get" Id="{235c7d96-57f5-0fcd-1c86-5da2fca8404d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[MaintenanceState := THIS^.fbMaintenance;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="OffState" Id="{778f5332-0e63-0b0d-3511-d2fbdaaabd9f}">
      <Declaration><![CDATA[PROPERTY OffState : I_State
]]></Declaration>
      <Get Name="Get" Id="{27583678-6dc3-0648-38e2-0d149cf0b76e}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[OffState := THIS^.fbOff;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="OutOfServiceState" Id="{37dde534-1593-0bb3-1839-9b22f775f6ff}">
      <Declaration><![CDATA[PROPERTY OutOfServiceState : I_State
]]></Declaration>
      <Get Name="Get" Id="{815743aa-9eec-0390-213b-4e51baacdf52}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[OutOfServiceState := THIS^.fbOutOfService;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="SelfTestState" Id="{f9ba6c6d-bc6a-0ee2-3713-e8984d8cdffd}">
      <Declaration><![CDATA[PROPERTY SelfTestState : I_State
]]></Declaration>
      <Get Name="Get" Id="{a8ca0b12-31d4-042c-2f45-b8bfd007b608}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[SelfTestState := THIS^.fbSelfTest;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ServingCustomerState" Id="{c17c9037-7517-0bab-3d8f-95edf2b02d76}">
      <Declaration><![CDATA[PROPERTY ServingCustomerState : I_State
]]></Declaration>
      <Get Name="Get" Id="{0b8858c9-53fc-0334-37d0-d79db04d169b}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[ServingCustomerState := THIS^.fbServingCustomer;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="SetState" Id="{e086c591-e6bf-0cc4-2e48-3fa7b37689a8}">
      <Declaration><![CDATA[METHOD SetState : BOOL
VAR_INPUT
	(* Set the new state to transition*)
	newState	: I_State;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[THIS^.ipState := newState;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_ATM_Machine">
      <LineId Id="9" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="36" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="37" Count="0" />
      <LineId Id="39" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="40" Count="1" />
      <LineId Id="43" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="44" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="102" Count="1" />
      <LineId Id="112" Count="2" />
      <LineId Id="104" Count="0" />
      <LineId Id="115" Count="1" />
      <LineId Id="121" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="53" Count="1" />
      <LineId Id="79" Count="0" />
      <LineId Id="78" Count="0" />
      <LineId Id="80" Count="1" />
      <LineId Id="202" Count="1" />
      <LineId Id="56" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="57" Count="1" />
      <LineId Id="62" Count="1" />
      <LineId Id="59" Count="0" />
      <LineId Id="70" Count="1" />
      <LineId Id="73" Count="1" />
      <LineId Id="168" Count="1" />
      <LineId Id="69" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.FB_Init">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.IdleState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.MaintenanceState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.OffState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.OutOfServiceState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.SelfTestState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.ServingCustomerState.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_ATM_Machine.SetState">
      <LineId Id="8" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>