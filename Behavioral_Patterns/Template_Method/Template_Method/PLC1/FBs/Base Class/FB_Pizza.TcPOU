<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_Pizza" Id="{4288fbe1-b507-4b53-980c-9e831d454702}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC FB_Pizza
VAR
	_PizzaState: INT;
	tonPizzaTimer : TON;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="addCheese" Id="{40c44adc-b934-41ec-97b9-4368975bc2f1}">
      <Declaration><![CDATA[METHOD addCheese
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Abstract Method]]></ST>
      </Implementation>
    </Method>
    <Method Name="addMeat" Id="{119b64f5-1788-467d-a213-c91d3435f9b9}">
      <Declaration><![CDATA[METHOD addMeat
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Abstract Method]]></ST>
      </Implementation>
    </Method>
    <Method Name="addVegetables" Id="{a0c4cca2-3178-4753-8594-fe871f75695c}">
      <Declaration><![CDATA[METHOD addVegetables : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Abstract Method]]></ST>
      </Implementation>
    </Method>
    <Method Name="bakePizza" Id="{7b656edb-be36-4ff3-865d-b675da4cf248}">
      <Declaration><![CDATA[METHOD bakePizza
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_WARN,
        	msgFmtStr := 'Pizza is in the oven, please wait...', '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="boxPizza" Id="{2f6381b0-8330-4e03-823e-93846c3ec2d1}">
      <Declaration><![CDATA[METHOD boxPizza
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_WARN,
        	msgFmtStr := 'Pizza Boxed and Ready!!!', '');]]></ST>
      </Implementation>
    </Method>
    <Method Name="customerWantsCheese" Id="{7b637df3-3e0d-4785-a9d7-77c8387ccfc9}">
      <Declaration><![CDATA[METHOD customerWantsCheese : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[customerWantsCheese := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="customerWantsMeat" Id="{a5e9f7aa-0b61-4c6d-830f-4fe33cbd665e}">
      <Declaration><![CDATA[METHOD customerWantsMeat : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[customerWantsMeat := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="customerWantsVegetables" Id="{55a131b3-afac-4a8b-b480-9dc21f72edfa}">
      <Declaration><![CDATA[METHOD customerWantsVegetables : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[customerWantsVegetables := FALSE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="makePizza" Id="{c8d5e093-559d-4613-80fd-868bbbf84c5d}">
      <Declaration><![CDATA[METHOD FINAL makePizza
VAR_IN_OUT
	bExecute: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE _PizzaState OF
	0: // Mandatory
		tonPizzaTimer(IN := bExecute, PT := T#2S); 
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			bExecute := FALSE;
			rollDough();
			_PizzaState := 10;
		END_IF
		
	10: // Optional
		tonPizzaTimer(IN := TRUE, PT := T#2S); 
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			IF(customerWantsCheese()) THEN
				addCheese();
			END_IF
			_PizzaState := 20;
		END_IF
		
	20: // Optional
		tonPizzaTimer(IN := TRUE, PT := T#2S); 
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			IF(customerWantsMeat()) THEN
				addMeat();
			END_IF
			_PizzaState := 30;
		END_IF
		
	30: // Optional
		tonPizzaTimer(IN := TRUE, PT := T#2S); 
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			IF(customerWantsVegetables()) THEN
				addVegetables();
			END_IF
			_PizzaState := 40;
		END_IF
		
	40: // Mandatory
		tonPizzaTimer(IN := TRUE, PT := T#2S);
 
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			bakePizza();
			_PizzaState := 100;
		END_IF
		
	100:// Mandatory
		tonPizzaTimer(IN := TRUE, PT := T#2S); 
		
		IF tonPizzaTimer.Q THEN
			tonPizzaTimer(IN := FALSE, PT := T#2S); 
			boxPizza();
			_PizzaState := 0;
		END_IF
END_CASE	
]]></ST>
      </Implementation>
    </Method>
    <Method Name="rollDough" Id="{6151d24d-07a7-4f0e-a1a4-00165f91a29a}">
      <Declaration><![CDATA[METHOD rollDough
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[ADSLOGSTR( msgCtrlMask := ADSLOG_MSGTYPE_WARN,
        	msgFmtStr := 'Rolling the Pizza Dough...', '');]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>